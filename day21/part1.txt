 0: seti 123           _ 4    } while (true)
 1: bani 4           456 4    }     if (123 & 456 == 72)
 2: eqri 4            72 4    }         goto 5
 3: addr 4             3 3    }
 4: seti 0             _ 3    }

 5: seti 0             _ 4    r[4] = 0

   6: bori 4         65536 1    r[1] = r[4] | 2^16
   7: seti 678134        _ 4    r[4] = 678134

     8: bani 1           255 5    r[5] = r[1] & (2^8 - 1)
     9: addr 4             5 4    r[4] += r[5]
    10: bani 4      16777215 4    r[4] = r[4] & (2^24 - 1)
    11: muli 4         65899 4    r[4] *= 65899
    12: bani 4      16777215 4    r[4] = r[4] & (2^24 - 1)

    13: gtir 256           1 5    } if (r[1] < 256)
    14: addr 5             3 3    }     goto 28
    15: addi 3             1 3    }
    16: seti 27            _ 3    }

    17: seti 0             _ 5    r[5] = 0

      18: addi 5             1 2    } r[2] = (r[5] + 1) * 2^8
      19: muli 2           256 2    }

      20: gtrr 2             1 2    } while (r[2] <= r[1])
      21: addr 2             3 3    }     r[5]++
      22: addi 3             1 3    }
      23: seti 25            _ 3    }
      24: addi 5             1 5    }
      25: seti 17            _ 3    }

    26: setr 5             _ 1    r[1] = r[5]
    27: seti 7             _ 3    goto 8

// Key insight: halt-inducing values of r[0] correspond to values of r[4] when instruction 28 is executed.

  28: eqrr 4             0 5    } if (r[0] == r[4])
  29: addr 5             3 3    }     quit
  30: seti 5             _ 3    } else
                                }     goto 6
